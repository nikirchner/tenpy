# Open design questions

- Think about mutability / views and copies

- Should we care about in-place operations, where we provide a Tensor instance
  whose memory may be overwritten with the result?

- Rethink the Dtype machinery

# After bulk of features exists

- Go through tenpy.linalg.old and see if anything is still missing

- manage namespaces, i.e. __init__.py in every module

- The following concepts have various possible names, check that use is consistent
  > charge, sector, irrep
  > dual, conj, ingoing
  > leg, vectorspace, axis

- for function with multiple Tensor instances as inputs, should we check for compatible backends
  or deal with whatever happens if they are not compatible?

- Error handling

- sanity checks

- double-check all __str__ and __repr__

- demo notebook (basis for tutorial and tests)

- tests

- docs
